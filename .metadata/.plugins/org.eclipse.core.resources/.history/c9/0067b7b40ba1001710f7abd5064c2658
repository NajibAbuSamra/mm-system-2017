package mm.androidservice;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.xml.crypto.Data;
import javax.enterprise.context.spi.Context;
import javax.json.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.constraints.Past;

import mm.controllers.SessionController;
import mm.da.DataAccess;
import mm.model.*;
import mm.constants.*;

import java.io.IOException;
import java.lang.Object;
import java.sql.SQLException;

@Path("/users")
@WebServlet("/Login")
public class LogIn extends HttpServlet {

	// This method is called if TEXT_PLAIN is request

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		super.doPost(req, resp);
		//System.out.println("Hello world" + req.getParameterMap().size());
	      System.out.println("Hello world" );
	}
//	@POST
//	@Path("/LogIn")
//	@Produces(MediaType.APPLICATION_JSON)
//	@Consumes(MediaType.APPLICATION_JSON)
	public JsonUser doLogin(@QueryParam("email") String uname,
			@QueryParam("password") String pwd,
			@QueryParam("deviceId") String deviceId) {
		{
			System.out.println(uname);

			DataAccess da = new DataAccess();
			User user = null;
			try {
				user = da.login(uname);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			JsonUser jsonUser;

			if (user == null) {

				jsonUser = new JsonUser(user, Constants.STATUS_MISSINGPARA,
						Constants.USERNOTFOUND, null);
			} else {
				// check with JBcrypt
				if (user.getPassword().equals(pwd)) {
					String session = SessionController.generateToken();
					// insert session into database
					jsonUser = new JsonUser(user, Constants.STATUS_SUCCESS,
							Constants.SUCCESS, session);

				} else {
					jsonUser = new JsonUser(user, Constants.STATUS_WRONGPARA,
							Constants.WRONGPASSWORD, null);
				}

			}

			return jsonUser;

		}
	}
}